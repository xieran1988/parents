include Rules.make

DEFAULT_LINUXKERNEL_CONFIG=omap3_evm_defconfig
DEFAULT_UBOOT_CONFIG=omap3_evm_config
DEFAULT_XLOAD_CONFIG=omap3evm_config

DMAI_PLATFORM=o3530_al
KERNEL_VERSION= $(shell cat $(LINUXKERNEL_INSTALL_DIR)/include/config/kernel.release)

# export cross compiler location in PATH
PATH := ${PATH}:${CSTOOL_PATH}

FIND_DSPLINKCONFIG = $(shell find $(LINK_INSTALL_DIR)/dsplink/config -name 'CURRENTCFG.MK')

.PHONY:	all clean components help cmem cmem_clean cmem_install dmai dmai_clean dmai_install linux linux_clean linux_install psp_examples psp_examples_clean psp_examples_install install lpm lpm_clean lpm_install codecs codecs_clean codecs_install u-boot u-boot_clean u-boot_install xload xload_clean xload_install c6accel c6accel_clean c6accel_install opengldemos opengldemos_clean opengldemos_install demos demos_clean demos_install dvtb dvtb_clean dvtb_install dsplink dsplink_clean dsplink_install c6run c6run_clean c6run_examples c6run_install  matrix matrix_clean matrix_install gstreamer_ti gstreamer_ti_install sdma sdma_clean sdma_install

#==============================================================================
# Default build target
#==============================================================================
default: all

#==============================================================================
# Build target build neessary components to enable all other build targets.
#==============================================================================
components: linux cmem sdma dsplink lpm c6run c6accel codecs dmai  

#==============================================================================
# Clean up the targets built by 'make all'.
#==============================================================================
clean:	linux_clean dsplink_clean cmem_clean lpm_clean sdma_clean c6run_clean codecs_clean dmai_clean c6accel_clean ceexamples_clean u-boot_clean dvtb_clean demos_clean psp_examples_clean opengldemos_clean xload_clean

#==============================================================================
# Build everything rebuildable.
#==============================================================================
all: components u-boot ceexamples dvtb demos psp_examples opengldemos xload c6run_examples matrix gstreamer_ti 

#==============================================================================
# Install everything
#==============================================================================
install: linux_install cmem_install sdma_install opengldemos_install ceexamples_install codecs_install lpm_install dsplink_install u-boot_install dvtb_install dmai_install demos_install  psp_examples_install c6accel_install xload_install c6run_install matrix_install gstreamer_ti_install

#==============================================================================
# A help message target.
#==============================================================================
help:
	@echo
	@echo "Available build targets are:"
	@echo
	@echo "  components                 : Builds all base components (See Note below)" 
	@echo
	@echo "  all                        : Builds all components and applications/examples"
	@echo "  clean                      : Remove files generated by the 'all' target"
	@echo
	@echo "  install                    : Install all the targets in "
	@echo "                               $(EXEC_DIR)"
	@echo
	@echo "  cmem                       : Build the CMEM kernel module"
	@echo "  cmem_clean                 : Remove generated cmem files."
	@echo "  cmem_install               : Install cmemk module"
	@echo
	@echo "  lpm                        : Build LPM"
	@echo "  lpm_clean                  : Remove generated lpm files."
	@echo "  lpm_install                : Install lpm module"
	@echo
	@echo "  sdma                       : Build SDMA for $(PLATFORM)"
	@echo "  sdma_clean                 : Remove generated SDMA files."
	@echo "  sdma_install               : Install sdmak module"
	@echo
	@echo "  demos                      : Build the DVSDK demos for $(PLATFORM)"
	@echo "  demos_clean                : Remove generated DVSDK demo files."
	@echo "  demos_install              : install DVSDK demo executables."
	@echo
	@echo "  dmai                       : Build DMAI"
	@echo "  dmai_clean                 : Remove generated DMAI files."
	@echo "  dmai_install               : Install dmai app"
	@echo
	@echo "  dvtb                       : Build DVTB for $(PLATFORM)"
	@echo "  dvtb_clean                 : Remove generated DVTB files"
	@echo "  dvtb_install               : install DVTB files"
	@echo
	@echo "  codecs                     : Build codec package"
	@echo "  codecs_clean               : Remove generated codec files."
	@echo "  codecs_install             : Install codec executable"
	@echo
	@echo "  dsplink                    : Configure and build DSP Link for ARM and DSP"
	@echo "                               and sample examples"
	@echo "  dsplink_clean              : Remove generated DSP Link files"
	@echo "  dsplink_install            : Install ARM and DSP link files"
	@echo
	@echo "  dsplink_arm                : Configure and build DSP Link for ARM"
	@echo "  dsplink_arm_clean          : Clean DSP Link for ARM"
	@echo 
	@echo "  dsplink_dsp                : Configure and build DSP Link for DSP"
	@echo "  dsplink_dsp_clean          : Clean DSP Link for DSP"
	@echo 
	@echo "  dsplink_samples            : Build DSP Link ARM and DSP sample applications"
	@echo "  dsplink_samples_clean      : Build DSP Link ARM and DSP sample applications"
	@echo
	@echo "  ceexamples                 : Build CE codecs, extensions, servers and apps"
	@echo "  ceexamples_clean           : Remove generated CE example files."
	@echo
	@echo "  linux                      : Build Linux kernel uImage and module"
	@echo "  linux_myconfig             : Launch menuconfig before building uImage and module"
	@echo "  linux_clean                : Remove generated Linux kernel files"
	@echo "  linux_install              : Install kernel binary and  modules"
	@echo
	@echo "  xload                      : Build the xload boot loader"
	@echo "  xload_clean                : Remove generated xload files"
	@echo "  xload_install              : Install the xload image"
	@echo
	@echo "  u-boot                     : Build the u-boot boot loader"
	@echo "  u-boot_clean               : Remove generated u-boot files"
	@echo "  u-boot_install             : Install the u-boot image"
	@echo
	@echo "  psp_examples               : Build Linux examples"
	@echo "  psp_examples_clean         : Remove all generated PSP examples"
	@echo "  psp_examples_install       : Install psp examples"
	@echo
	@echo "  c6accel                    : Build c6accel package"
	@echo "  c6accel_clean              : Remove generated c6accel files"
	@echo "  c6accel_install            : Install c6accel examples"
	@echo
	@echo "  c6run                      : Build c6run backend libraries"
	@echo "  c6run_clean                : Remove c6run backend libraries"
	@echo "  c6run_examples             : Build c6run examples & tests"
	@echo "  c6run_install              : Install c6run examples & tests"
	@echo 
	@echo "  opengldemos                : Build the OPENGL graphics SDK demos for $(PLATFORM)"
	@echo "  opengldemos_clean          : Remove OPENGL graphics SDK demo files."
	@echo "  opengldemos_install        : install OPENGL graphics SDK demo executables."
	@echo
	@echo "  matrix                     : Build matrix application launcher"
	@echo "  matrix_clean               : Remove all matrix files"
	@echo "  matrix_install             : Install matrix"
	@echo
	@echo "  gstreamer_ti               : Build gstreamer-ti plugins"
	@echo "  gstreamer_ti_install       : Install gstreamer-ti plugins"
	@echo
	@echo "===============================================================================" 
	@echo "NOTE: The 'make components' target must be issued once upon installation for"
	@echo "      all other targets to build properly.  A 'make clean' target should be"
	@echo "      issued before this target"
	@echo

#==============================================================================
# Build the dvsdk demos for the configured platform. Also, an explicit cleanup
# target is defined.
#==============================================================================
demos:
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup ; cd $(DEMO_INSTALL_DIR)/qtInterface ; qmake ; $(MAKE) PLATFORM=$(PLATFORM)
	$(MAKE) -C $(DEMO_INSTALL_DIR) $(PLATFORM) DVSDK_INSTALL_DIR=$(DVSDK_INSTALL_DIR) XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) CE_INSTALL_DIR=$(CE_INSTALL_DIR) FC_INSTALL_DIR=$(FC_INSTALL_DIR) CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) CODEC_INSTALL_DIR=$(CODEC_INSTALL_DIR) XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) DMAI_INSTALL_DIR=$(DMAI_INSTALL_DIR) MVTOOL_DIR=$(MVTOOL_DIR) CC=$(CSTOOL_PREFIX)gcc AR=$(CSTOOL_PREFIX)ar CROSS_COMPILE=$(MVTOOL_PREFIX) LINUXLIBS_INSTALL_DIR=$(LINUXLIBS_INSTALL_DIR) C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR)  PLATFORM=$(PLATFORM)

demos_clean:
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup ; cd $(DEMO_INSTALL_DIR)/qtInterface ; qmake ; $(MAKE) PLATFORM=$(PLATFORM) clean
	$(MAKE) -C $(DEMO_INSTALL_DIR) clean DVSDK_INSTALL_DIR=$(DVSDK_INSTALL_DIR) XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) CE_INSTALL_DIR=$(CE_INSTALL_DIR) FC_INSTALL_DIR=$(FC_INSTALL_DIR) CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) CODEC_INSTALL_DIR=$(CODEC_INSTALL_DIR) XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) DMAI_INSTALL_DIR=$(DMAI_INSTALL_DIR) MVTOOL_DIR=$(MVTOOL_DIR) CC=$(CSTOOL_PREFIX)gcc CROSS_COMPILE=$(MVTOOL_PREFIX) LINUXLIBS_INSTALL_DIR=$(LINUXLIBS_INSTALL_DIR) C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR) PLATFORM=$(PLATFORM)

demos_install:
	install -d $(EXEC_DIR)/usr/share/ti/dvsdk-demos
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup ; cd $(DEMO_INSTALL_DIR)/qtInterface ; qmake ; $(MAKE) PLATFORM=$(PLATFORM) EXEC_DIR=$(EXEC_DIR)/usr/share/ti/dvsdk-demos install
	$(MAKE) -C $(DEMO_INSTALL_DIR)/$(PLATFORM) install DVSDK_INSTALL_DIR=$(DVSDK_INSTALL_DIR) XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) CE_INSTALL_DIR=$(CE_INSTALL_DIR) FC_INSTALL_DIR=$(FC_INSTALL_DIR) CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) CODEC_INSTALL_DIR=$(CODEC_INSTALL_DIR) XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) DMAI_INSTALL_DIR=$(DMAI_INSTALL_DIR) MVTOOL_DIR=$(MVTOOL_DIR) CC=$(CSTOOL_PREFIX)gcc CROSS_COMPILE=$(MVTOOL_PREFIX) LINUXLIBS_INSTALL_DIR=$(LINUXLIBS_INSTALL_DIR) C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR) EXEC_DIR=$(EXEC_DIR)/usr/share/ti/dvsdk-demos PLATFORM=$(PLATFORM)

#==============================================================================
# Build the Linux kernel. Also, an explicit cleanup target is defined.
#==============================================================================
linux:
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) $(DEFAULT_LINUXKERNEL_CONFIG)
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) uImage
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) modules

linux_myconfig:
	@if ! test -e $(LINUXKERNEL_INSTALL_DIR)/.config; then $(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) $(DEFAULT_LINUXKERNEL_CONFIG) ; fi
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) menuconfig
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) uImage
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) modules

linux_clean:
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) mrproper
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) clean

linux_install:
	install -d $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/arch/arm/boot/uImage $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/vmlinux $(EXEC_DIR)/boot
	install  $(LINUXKERNEL_INSTALL_DIR)/System.map $(EXEC_DIR)/boot
	$(MAKE) -C $(LINUXKERNEL_INSTALL_DIR) ARCH=arm CROSS_COMPILE=$(CSTOOL_PREFIX) INSTALL_MOD_PATH=$(EXEC_DIR)/ modules_install

#==============================================================================
# Build xload. Also, an explicit cleanup target is defined.
#==============================================================================
xload:
	$(MAKE) -C $(PSP_INSTALL_DIR)/x-load-* CROSS_COMPILE=$(CSTOOL_PREFIX) ARCH=arm distclean
	$(MAKE) -C $(PSP_INSTALL_DIR)/x-load-* CROSS_COMPILE=$(CSTOOL_PREFIX) ARCH=arm $(DEFAULT_XLOAD_CONFIG) 
	$(MAKE) -C $(PSP_INSTALL_DIR)/x-load-* CROSS_COMPILE=$(CSTOOL_PREFIX) ARCH=arm
	$(DVSDK_INSTALL_DIR)/linux-devkit/bin/signGP $(PSP_INSTALL_DIR)/x-load-*/x-load.bin

xload_clean:
	$(MAKE) -C $(PSP_INSTALL_DIR)/x-load-* clean

xload_install:
	install -d $(EXEC_DIR)/boot
	install $(PSP_INSTALL_DIR)/x-load-*/x-load.bin $(EXEC_DIR)/boot
	install $(PSP_INSTALL_DIR)/x-load-*/x-load.bin.ift $(EXEC_DIR)/boot

#==============================================================================
# Build u-boot. Also, an explicit cleanup target is defined.
#==============================================================================
u-boot:
	$(MAKE) -C $(PSP_INSTALL_DIR)/u-boot-* CROSS_COMPILE=$(CSTOOL_PREFIX) $(DEFAULT_UBOOT_CONFIG)
	$(MAKE) -C $(PSP_INSTALL_DIR)/u-boot-* CROSS_COMPILE=$(CSTOOL_PREFIX)

u-boot_clean: 
	$(MAKE) -C $(PSP_INSTALL_DIR)/u-boot-* CROSS_COMPILE=$(CSTOOL_PREFIX) distclean

u-boot_install:
	install -d $(EXEC_DIR)/boot
	install $(PSP_INSTALL_DIR)/u-boot-*/u-boot.bin $(EXEC_DIR)/boot
	install $(PSP_INSTALL_DIR)/u-boot-*/u-boot.map $(EXEC_DIR)/boot

#==============================================================================
# Build the PSP Linux examples. Also, an explicit cleanup target is defined.
#==============================================================================
psp_examples:
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples-*/audio PLAT=omap3530 KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR)/include LIB_INC=$(LINUXLIBS_INSTALL_DIR)/include LIB_DIR=$(LINUXLIBS_INSTALL_DIR)/lib all
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples-*/video PLAT=omap3530 KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) LIB_INC=$(LINUXLIBS_INSTALL_DIR)/include LIB_DIR=$(LINUXLIBS_INSTALL_DIR)/lib all

psp_examples_clean:
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples-*/audio PLAT=omap3530 KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR)/include LIB_INC=$(LINUXLIBS_INSTALL_DIR)/include LIB_DIR=$(LINUXLIBS_INSTALL_DIR)/lib clean
	$(MAKE) -C $(PSP_INSTALL_DIR)/linux-driver-examples-*/video PLAT=omap3530 KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR)/include LIB_INC=$(LINUXLIBS_INSTALL_DIR)/include LIB_DIR=$(LINUXLIBS_INSTALL_DIR)/lib clean

psp_examples_install:
	mkdir -p $(EXEC_DIR)/usr/share/ti/linux-driver-examples//audio
	cp  $(PSP_INSTALL_DIR)/linux-driver-examples-*/audio/bin/* $(EXEC_DIR)/usr/share/ti/linux-driver-examples/audio
	mkdir -p $(EXEC_DIR)/usr/share/ti/linux-driver-examples/video
	cp  $(PSP_INSTALL_DIR)/linux-driver-examples-*/video/bin/* $(EXEC_DIR)/usr/share/ti/linux-driver-examples/video
	
#==============================================================================
# Build the CMEM kernel module for the configured platform, and make sure the
# kernel_binaries directory is kept in sync. Also, an explicit cleanup target
# is defined.
#==============================================================================
cmem:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface ../../lib/cmem.a470MV
#	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module
#	xbmod

cmem_clean:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module clean
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/interface clean

cmem_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/cmem/src/module/cmemk.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

#==============================================================================
# Build SDMA for the configured platform. Also, an explicit cleanup
# target is defined.
#==============================================================================
sdma:
	$(MAKE) -C $(CMEM_INSTALL_DIR)/packages/ti/sdo/linuxutils/sdma/src/interface ../../lib/sdma.a470MV
#	$(MAKE) -C $(LINUXUTILS_INSTALL_DIR)/packages/ti/sdo/linuxutils/sdma/src/module RULES_MAKE=$(DVSDK_INSTALL_DIR)/Rules.make
#	xbmod

sdma_clean:
	$(MAKE) -C $(LINUXUTILS_INSTALL_DIR)/packages/ti/sdo/linuxutils/sdma/src/module clean RULES_MAKE=$(DVSDK_INSTALL_DIR)/Rules.make

sdma_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(LINUXUTILS_INSTALL_DIR)/packages/ti/sdo/linuxutils/sdma/src/module/sdmak.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

#==============================================================================
# Build LPM for the configured platform. Also, an explicit cleanup
# target is defined.
#==============================================================================
lpm:
	$(MAKE) -C $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm \
		LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
		MVTOOL_PREFIX=$(CSTOOL_PREFIX) \
		DSPLINK_REPO=$(LINK_INSTALL_DIR)

lpm_clean:
	$(MAKE)  -C $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm \
	LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	MVTOOL_PREFIX=$(CSTOOL_PREFIX) \
	DSPLINK_REPO=$(LINK_INSTALL_DIR) clean

lpm_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(LPM_INSTALL_DIR)/packages/ti/bios/power/modules/omap3530/lpm/lpm_omap3530.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

#==============================================================================
# Build the Digital Video Test Bench for the configured platform. Also, an
# explicit cleanup target is defined.
#==============================================================================
dvtb:
	$(MAKE) -C $(DVTB_INSTALL_DIR) PLATFORM=$(PLATFORM) \
		VERBOSE="true" \
		DMAI_INSTALL_DIR=$(DMAI_INSTALL_DIR) \
		XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
		CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
		FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
		CODEC_INSTALL_DIR=$(CODEC_INSTALL_DIR) \
		CODEGEN_INSTALL_DIR=$(CODEGEN_INSTALL_DIR) \
		BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
		CROSS_COMPILE=$(CSTOOL_PREFIX) \
		XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
		LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
		CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
		LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
		LINUXKERNEL_INSTALL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
		LINUXLIBS_INSTALL_DIR=$(LINUXLIBS_INSTALL_DIR) \
		MVTOOL_DIR=$(CSTOOL_DIR) \
		CSTOOL_DIR=$(CSTOOL_DIR) \
		MVTOOL_PREFIX=$(CSTOOL_PREFIX) \
		CSTOOL_PREFIX=$(CSTOOL_PREFIX) \
		C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR) \
		$(PLATFORM)
	@echo
	@echo "dvtb can be found under $(DVTB_INSTALL_DIR)/packages/ti/sdo/dvtb/$(PLATFORM)/linux/bin"

dvtb_clean:
	$(MAKE) -C $(DVTB_INSTALL_DIR) clean

dvtb_install:
	install -d $(EXEC_DIR)/usr/share/ti/dvtb/scripts
	install $(DVTB_INSTALL_DIR)/packages/ti/sdo/dvtb/$(PLATFORM)/linux/bin/* $(EXEC_DIR)/usr/share/ti/dvtb
	install $(DVTB_INSTALL_DIR)/packages/ti/sdo/dvtb/scripts/$(PLATFORM)/* $(EXEC_DIR)/usr/share/ti/dvtb/scripts

#==============================================================================
# Build codec package for the configured platform. Also, an explicit cleanup
# target is defined.
#==============================================================================
codecs:
	$(MAKE) -C $(CODEC_INSTALL_DIR) \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR) \
	XDCARGS="eval" \
	all

codecs_clean:
	$(MAKE) -C $(CODEC_INSTALL_DIR) \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	LINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	C6ACCEL_INSTALL_DIR=$(C6ACCEL_INSTALL_DIR) \
	XDCARGS="eval" \
	clean

codecs_install:
	install -d $(EXEC_DIR)/usr/share/ti/codecs-server
	for file in $(shell find $(CODEC_INSTALL_DIR) -name *.x64P); do \
	cp $$file $(EXEC_DIR)/usr/share/ti/codecs-server ; \
	done
		
#==============================================================================
# Build the Davinci Multimedia Application Interface for the configured
# platform. Also, an explicit cleanup target is defined.
#==============================================================================
dmai:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(DMAI_PLATFORM) \
	CE_INSTALL_DIR_$(DMAI_PLATFORM)=$(CE_INSTALL_DIR) \
	CODEC_INSTALL_DIR_$(DMAI_PLATFORM)=$(CODEC_INSTALL_DIR) \
	CMEM_INSTALL_DIR_$(DMAI_PLATFORM)=$(CMEM_INSTALL_DIR) \
	FC_INSTALL_DIR_$(DMAI_PLATFORM)=$(FC_INSTALL_DIR) \
	XDAIS_INSTALL_DIR_$(DMAI_PLATFORM)=$(XDAIS_INSTALL_DIR) \
	LINUXLIBS_INSTALL_DIR_$(DMAI_PLATFORM)=$(LINUXLIBS_INSTALL_DIR) \
	LINUXKERNEL_INSTALL_DIR_$(DMAI_PLATFORM)=$(LINUXKERNEL_INSTALL_DIR) \
	CROSS_COMPILE_$(DMAI_PLATFORM)=$(CSTOOL_PREFIX) \
	XDC_INSTALL_DIR_$(DMAI_PLATFORM)=$(XDC_INSTALL_DIR) \
	LINK_INSTALL_DIR_$(DMAI_PLATFORM)=$(LINK_INSTALL_DIR) \
	C6ACCEL_INSTALL_DIR_$(DMAI_PLATFORM)=$(C6ACCEL_INSTALL_DIR) \
	LPM_INSTALL_DIR_$(DMAI_PLATFORM)=$(LPM_INSTALL_DIR) \
	C6ACCEL_INSTALL_DIR_$(DMAI_PLATFORM)=$(C6ACCEL_INSTALL_DIR) \
	VERBOSE=false \
	all
	
dmai_clean:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(DMAI_PLATFORM) \
	XDC_INSTALL_DIR_$(DMAI_PLATFORM)=$(XDC_INSTALL_DIR) \
	clean

dmai_install:
	$(MAKE) -C $(DMAI_INSTALL_DIR) PLATFORM=$(DMAI_PLATFORM) \
	EXEC_DIR_$(DMAI_PLATFORM)=$(EXEC_DIR)/usr/share/ti/ti-dmai-apps \
	install

###############################################################################
# Build codec engine examples
###############################################################################
ceexamples_apps:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_apps_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_apps_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps to target filesystem. "
	@echo 

ceexamples_extensions:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/extensions \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_extensions_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/apps \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_extensions_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/extensions to target filesystem. "
	@echo 


ceexamples_servers:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers  \
	DEVICES="OMAP3530" \
	GPPOS="LINUX_GCC" \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	CGTOOLS_C674=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_servers_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	CGTOOLS_C674=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_servers_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/servers to target filesystem. "
	@echo 


ceexamples_codecs:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	CGTOOLS_C674=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	all 

ceexamples_codecs_clean:
	make -C $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs \
	DEVICES="OMAP3530" \
	GPPOS=LINUX_GCC \
	PROGRAMS="APP_CLIENT DSP_SERVER" \
	CE_INSTALL_DIR=$(CE_INSTALL_DIR) \
	FC_INSTALL_DIR=$(FC_INSTALL_DIR) \
	DSPLINK_INSTALL_DIR=$(LINK_INSTALL_DIR) \
	CMEM_INSTALL_DIR=$(CMEM_INSTALL_DIR) \
	XDAIS_INSTALL_DIR=$(XDAIS_INSTALL_DIR) \
	XDC_INSTALL_DIR=$(XDC_INSTALL_DIR) \
	LPM_INSTALL_DIR=$(LPM_INSTALL_DIR) \
	BIOS_INSTALL_DIR=$(BIOS_INSTALL_DIR) \
	EDMA3_LLD_INSTALL_DIR=$(EDMA3_LLD_INSTALL_DIR) \
	CGTOOLS_C64P=$(CODEGEN_INSTALL_DIR) \
	CGTOOLS_C674=$(CODEGEN_INSTALL_DIR) \
	BIOSUTILS_INSTALL_DIR=$(BIOSUTILS_INSTALL_DIR) \
	CGTOOLS_V5T=$(CSTOOL_DIR) \
	clean 

ceexamples_codecs_install:
	@echo 
	@echo "**** Don't have working install target ****"
	@echo "Copy the required application binaries and data files from $(CE_INSTALL_DIR)/examples/ti/sdo/ce/examples/codecs to target filesystem. "
	@echo 

ceexamples: ceexamples_codecs ceexamples_extensions ceexamples_servers ceexamples_apps
 
ceexamples_clean: ceexamples_codecs_clean ceexamples_extensions_clean ceexamples_servers_clean ceexamples_apps_clean

ceexamples_install: ceexamples_codecs_install ceexamples_extensions_install ceexamples_servers_install ceexamples_apps_install


dsplink_cfg:
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	perl $(LINK_INSTALL_DIR)/dsplink/config/bin/dsplinkcfg.pl \
	--platform=OMAP3530  --nodsp=1 --dspcfg_0=OMAP3530SHMEM \
	--dspos_0=DSPBIOS5XX --gppos=OMAPLSP --comps=ponslrmc

dsplink_arm_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/gpp/src \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	BASE_BUILDOS=$(LINUXKERNEL_INSTALL_DIR) \
	clean 
endif

dsplink_arm: dsplink_cfg
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/gpp/src \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	BASE_BUILDOS=$(LINUXKERNEL_INSTALL_DIR) \
	preprocess dirinc dirdeb direxp cleanrel includes objrel trgrel exprel
	# xbmod

dsplink_dsp_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	clean 
endif

dsplink_dsp: dsplink_cfg
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	all

dsplink_samples_clean:
ifeq ($(FIND_DSPLINKCONFIG), $(LINK_INSTALL_DIR)/dsplink/config/BUILD/CURRENTCFG.MK)
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE)	-C $(LINK_INSTALL_DIR)/dsplink/gpp/src/samples \
	BASE_TOOLCHAIN=$(CSTOOL_DIR) \
	BASE_CGTOOLS=$(CSTOOL_DIR)/bin \
	OSINC_PLATFORM=$(CSTOOL_PREFIX)/lib/gcc/arm-none-linux-gnueabi/$($(CSTOOL_PREFIX) --dumversion)/include \
	OSINC_TARGET=$(CSTOOL_DIR)/target/usr/include \
	CROSS_COMPILE=$(CSTOOL_PREFIX) \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	clean

	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src/samples \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	XDCTOOLS_DIR=$(XDC_INSTALL_DIR) \
	clean
endif
	
dsplink_samples:
	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE)	-C $(LINK_INSTALL_DIR)/dsplink/gpp/src/samples \
	BASE_TOOLCHAIN=$(CSTOOL_DIR) \
	BASE_CGTOOLS=$(CSTOOL_DIR)/bin \
	OSINC_PLATFORM=$(CSTOOL_PREFIX)/lib/gcc/arm-none-linux-gnueabi/$($(CSTOOL_PREFIX) --dumversion)/include \
	OSINC_TARGET=$(CSTOOL_DIR)/target/usr/include \
	CROSS_COMPILE="$(CSTOOL_PREFIX)" \
	CC=$(CSTOOL_PREFIX)gcc \
	COMPILER=$(CSTOOL_PREFIX)gcc \
	ARCHIVER=$(CSTOOL_PREFIX)ar \
	AR=$(CSTOOL_PREFIX)ar \
	LD=$(CSTOOL_PREFIX)ld \
	KERNEL_DIR=$(LINUXKERNEL_INSTALL_DIR) \
	all

	DSPLINK=$(LINK_INSTALL_DIR)/dsplink \
	$(MAKE) -C $(LINK_INSTALL_DIR)/dsplink/dsp/src/samples \
	BASE_CGTOOLS=$(CODEGEN_INSTALL_DIR) \
	BASE_SABIOS=$(BIOS_INSTALL_DIR) \
	XDCTOOLS_DIR=$(XDC_INSTALL_DIR) \
	all

dsplink_dsp_genpackage:
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/dsp clean
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/dsp .interfaces

dsplink_gpp_genpackage:
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/gpp clean
	$(XDC_INSTALL_DIR)/xdc -C $(LINK_INSTALL_DIR)/dsplink/gpp .interfaces

dsplink: dsplink_arm dsplink_dsp dsplink_samples dsplink_dsp_genpackage dsplink_gpp_genpackage 

dsplink_clean: dsplink_arm_clean dsplink_dsp_clean dsplink_samples_clean
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc .make -PR .
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc clean -PR .
    XDCPATH=${DSPLINK} ${XDC_INSTALL_DIR}/xdc .interfaces -PR .

dsplink_install:
	install -d $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp
	install $(LINK_INSTALL_DIR)/dsplink/gpp/export/BIN/Linux/OMAP3530/RELEASE/dsplinkk.ko $(EXEC_DIR)/lib/modules/$(KERNEL_VERSION)/kernel/drivers/dsp

	install -d $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples
	cp $(LINK_INSTALL_DIR)/dsplink/gpp/export/BIN/Linux/OMAP3530/RELEASE/*gpp $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples
	@for file in $(shell find $(LINK_INSTALL_DIR)/dsplink/dsp/export -name *.out); do \
	cp $$file $(EXEC_DIR)/usr/share/ti/ti-dsplink-examples ; \
	done


##############################################################################
#  Build c6accel
##############################################################################
c6accel:
	$(MAKE) -C $(C6ACCEL_INSTALL_DIR) \
	PLATFORM="$(PLATFORM)" \
	CE_INSTALL_DIR="$(CE_INSTALL_DIR)" \
	XDAIS_INSTALL_DIR="$(XDAIS_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	EDMA3_LLD_INSTALL_DIR="$(EDMA3_LLD_INSTALL_DIR)" \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	FC_INSTALL_DIR="$(FC_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	BIOSUTILS_INSTALL_DIR="$(BIOSUTILS_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	SERVER_INSTALL_DIR="$(CODEC_INSTALL_DIR)" \
	C6ACCEL_INSTALL_DIR="$(C6ACCEL_INSTALL_DIR)" \
	CSTOOL_DIR="$(CSTOOL_DIR)" \
	CSTOOL_PREFIX="$(CSTOOL_PREFIX)" \
	all

c6accel_clean:
	$(MAKE) -C $(C6ACCEL_INSTALL_DIR) \
	PLATFORM="$(PLATFORM)" \
	CE_INSTALL_DIR="$(CE_INSTALL_DIR)" \
	XDAIS_INSTALL_DIR="$(XDAIS_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	EDMA3_LLD_INSTALL_DIR="$(EDMA3_LLD_INSTALL_DIR)" \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	FC_INSTALL_DIR="$(FC_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	BIOSUTILS_INSTALL_DIR="$(BIOSUTILS_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	SERVER_INSTALL_DIR="$(CODEC_INSTALL_DIR)" \
	C6ACCEL_INSTALL_DIR="$(C6ACCEL_INSTALL_DIR)" \
	CSTOOL_DIR="$(CSTOOL_DIR)" \
	CSTOOL_PREFIX="$(CSTOOL_PREFIX)" \
	clean

c6accel_install:
	$(MAKE) -C $(C6ACCEL_INSTALL_DIR) \
	PLATFORM="$(PLATFORM)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	C6ACCEL_INSTALL_DIR="$(C6ACCEL_INSTALL_DIR)" \
	EXEC_DIR_C6ACCEL="$(EXEC_DIR)//usr/share/ti/c6accel-apps" \
	install

################################################################################
# Build openGL demos
################################################################################
opengldemos:
	$(MAKE) -C $(GRAPHICS_INSTALL_DIR) \
		CSTOOL_DIR=$(CSTOOL_DIR) \
		KERNEL_INSTALL_DIR=$(KERNEL_INSTALL_DIR) \
		GRAPHICS_INSTALL_DIR=$(GRAPHICS_INSTALL_DIR) \
		BUILD=release OMAPES=3.x all

opengldemos_clean:
	$(MAKE) -C $(GRAPHICS_INSTALL_DIR) \
		CSTOOL_DIR=$(CSTOOL_DIR) \
		KERNEL_INSTALL_DIR=$(KERNEL_INSTALL_DIR) \
		GRAPHICS_INSTALL_DIR=$(GRAPHICS_INSTALL_DIR) \
		BUILD=release OMAPES=3.x clean

opengldemos_install:
	mkdir -p ${EXEC_DIR}/opengl-demos/etc/init.d
	$(MAKE) -C $(GRAPHICS_INSTALL_DIR) \
		CSTOOL_DIR=$(CSTOOL_DIR) \
		KERNEL_INSTALL_DIR=$(KERNEL_INSTALL_DIR) \
		GRAPHICS_INSTALL_DIR=$(GRAPHICS_INSTALL_DIR) \
		TARGETFS_INSTALL_DIR=$(EXEC_DIR)/opengl-demos \
		BUILD=release OMAPES=3.x install 

################################################################################
# Build C6run
################################################################################
c6run:
	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	omap3530_config

	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	clean

	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	all

c6run_clean:
	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	distclean

c6run_examples:
	source $(C6RUN_INSTALL_DIR)/environment.sh; \
	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	C6RUN_TOOLCHAIN_PATH="$(C6RUN_INSTALL_DIR)" \
	examples

	source $(C6RUN_INSTALL_DIR)/environment.sh; \
	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	C6RUN_TOOLCHAIN_PATH="$(C6RUN_INSTALL_DIR)" \
	tests

c6run_install:
	install -d $(EXEC_DIR)/usr/share/ti/c6run-apps

	$(MAKE) -C $(C6RUN_INSTALL_DIR) \
	INSTALL_DIR="$(EXEC_DIR)/usr/share/ti/c6run-apps" \
	CODEGEN_INSTALL_DIR="$(CODEGEN_INSTALL_DIR)" \
	BIOS_INSTALL_DIR="$(BIOS_INSTALL_DIR)" \
	XDC_INSTALL_DIR="$(XDC_INSTALL_DIR)" \
	LINK_INSTALL_DIR="$(LINK_INSTALL_DIR)" \
	CMEM_INSTALL_DIR="$(CMEM_INSTALL_DIR)" \
	LPM_INSTALL_DIR="$(LPM_INSTALL_DIR)" \
	ARM_TOOLCHAIN_PATH="$(CSTOOL_DIR)" \
	ARM_TOOLCHAIN_PREFIX="arm-none-linux-gnueabi-" \
	install_programs

################################################################################
# Build Martix GUI Appication Launcher
################################################################################
matrix:
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup ; cd $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-* ; qmake ; $(MAKE) PLATFORM=$(PLATFORM)
	chmod 755 $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/$(PLATFORM)/bin/*

matrix_clean:
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup;  cd $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-* ; qmake ; $(MAKE) distclean

matrix_install:
	install -d $(EXEC_DIR)/etc/init.d
	install -m 0755 $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/$(PLATFORM)/etc/init $(EXEC_DIR)/etc/init.d/matrix-gui-e

	install -d $(EXEC_DIR)/usr/bin
	install -m 0755 $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/matrix_gui $(EXEC_DIR)/usr/bin/matrix_guiE
	cp -ar $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/$(PLATFORM)/bin/* \
	$(EXEC_DIR)/usr/bin/

	install -d $(EXEC_DIR)/usr/share/matrix
	cp -ar $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/$(PLATFORM)/html \
	$(EXEC_DIR)/usr/share/matrix/

	install -d $(EXEC_DIR)/usr/share/matrix
	cp -ar $(DVSDK_INSTALL_DIR)/example-applications/matrix-gui-*/images/ \
	$(EXEC_DIR)/usr/share/matrix/

################################################################################
# Build Gstreamer plugins
################################################################################
gstreamer_ti:
	. $(DVSDK_INSTALL_DIR)/linux-devkit/environment-setup ; cd $(DVSDK_INSTALL_DIR)/gstreamer-ti_svn* ; export CODEC_SERVER=/usr/share/ti/ti-codecs-server/cs.x64P && $(MAKE) -f Makefile.external DVSDK_PATH=$(DVSDK_INSTALL_DIR) $(PLATFORM)

gstreamer_ti_install:
	install -d $(EXEC_DIR)/usr/lib/gstreamer-0.10
	cp $(DVSDK_INSTALL_DIR)/gstreamer-ti_svn*/src/.libs/*.so $(EXEC_DIR)/usr/lib/gstreamer-0.10

